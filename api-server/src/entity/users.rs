//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.1

use super::sea_orm_active_enums::UserRole;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub user_id: i32,
    #[sea_orm(unique)]
    pub email: String,
    pub password: String,
    pub role: UserRole,
    pub created_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::customers::Entity")]
    Customers,
    #[sea_orm(has_one = "super::suppliers::Entity")]
    Suppliers,
}

impl Related<super::customers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Customers.def()
    }
}

impl Related<super::suppliers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Suppliers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
